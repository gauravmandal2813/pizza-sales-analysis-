-- Retrieve the total number of orders placed.

select count(order_id) as total_orders from orders;


-- Calculate the total revenue generated from pizza sales.
-- for revenue = quentity*price and both are in different table so we will use join here 

SELECT 
    ROUND(SUM(order_details.quantity * pizzas.price),
            2) AS total_sales
FROM
    order_details
        JOIN
    pizzas ON order_details.pizza_id = pizzas.pizza_id;


-- Identify the highest-priced pizza.

select pizza_types.name,pizzas.price from pizza_types join pizzas 
on pizza_types.pizza_type_id = pizzas.pizza_type_id 
order by pizzas.price desc limit 1;


-- Identify the most common pizza size ordered.-- 

SELECT * FROM pizzas;
select pizzas.size,(count(pizzas.size)) as total_size from order_details join pizzas 
on pizzas.pizza_id = order_details.pizza_id group by pizzas.size order by total_size desc;



-- List the top 5 most ordered pizza types along with their quantities.

select pizza_types.name, sum(order_details.quantity) as quantity from pizza_types 
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id join order_details 
on pizzas.pizza_id = order_details.pizza_id group by pizza_types.name order by quantity desc limit 5 ;


-- Join the necessary tables to find the total quantity of each pizza category ordered.-- 

select pizza_types.category, sum(order_details.quantity) as quantity from pizza_types 
join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id join order_details 
on pizzas.pizza_id = order_details.pizza_id group by pizza_types.category order by quantity;


-- Determine the distribution of orders by hour of the day---

select * from orders;

select hour(order_time) as hour, count(order_id) as order_count 
from orders group by hour;



-- Join relevant tables to find the category-wise distribution of pizzas.

select category, count(name) from pizza_types group by category;



-- Group the orders by date and calculate the average number of pizzas ordered per day.
select * from orders;
select * from order_details;
select round(avg(order_quantity),0) from (select orders.order_date, sum(order_details.quantity) as 
order_quantity from order_details join 
orders on order_details.order_id = orders.order_id group by orders.order_date) as order_quantity;


-- Analyze the cumulative revenue generated over time.


select order_date,
sum(revenue) over(order by order_date) as cum_revenue from 
(select orders.order_date, sum(pizzas.price*order_details.quantity) as revenue from orders 
join order_details on orders.order_id = order_details.order_id 
join pizzas on pizzas.pizza_id = order_details.pizza_id group by orders.order_date) as sales;


-- Determine the top 3 most ordered pizza types
-- based on revenue for each pizza category---


select * from (select category,name,revenue,
dense_rank() over(partition by category order by revenue desc) as rn
from (SELECT pizza_types.category,pizza_types.name,sum((order_details.quantity*pizzas.price)) as revenue
from pizza_types join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id join order_details 
on order_details.pizza_id = pizzas.pizza_id group by pizza_types.category,pizza_types.name) as sales) as c where rn <=3;


















































































